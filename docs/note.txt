TODO
 Verifica: E' possibile creare delle pagine con output non html (ad esempio rss?)
 Authentication
 Implementare un Widget per la documentazione di assembly (tramite custom View?)
 Log configurabile
 Integrate with restsharp (create a module/assembly to make rest calls)
 Check include bug when rendering inside a param a sub page with a param. Maybe only layout?
 UnitTest XrcService e verificare cosa manca
 Mobile support (like MVC 4)
 Allow to load custom assembly and namespace from scripting code
 Check reserved params, especially for razor
 Cache configurabile
 Review scripting feature. There are better alternatives? Is currenctly secure? Performance? Memory leak?
 See if there is a better way to roting request. For example using MVC routing? Also for parameters?
 Widgets support: load common widgets from assemblies (widgets can be simple specials views)
 Support redirect page (using a particular view or a specific xrc command?)
 Sample explanation
 Vocabolario (su distributed cache?)
 XHtmlView dovrebbe renderizzare per i fragment solo il contenuto (senza xml declaration ...), pensare anche come gestire correttamente l'editor visual studio
 Aggiungere Condition nella view (in modo da scegliere la view a seconda di una condizione scriptabile, es. pageUrl.EndsWith(".dll"))
 Valutare se usare invece che MarkdownXrc/MarkdownSharp  MarkdownDeep (http://www.toptensoftware.com/markdowndeep/). Licenza?



Features
Installazione e configurazione facile sia sulle macchine di sviluppo che in ambienti di produzione. Essendo un sito web asp.net pu� fare affidamento su tutte le features microsoft di pubblicazione (dovreste riuscire a scaricare da github la solution e provarla in locale senza problemi, i requisiti sono solo VS 2010 Sp1 e nuget aggiornato)
Ambiente di lavoro familiare a ogni sviluppatore utilizzando tecnologie standard (visual studio->html, xslt, razor, ...). Bisogna solo imparare la sintassi del file xrc ma � piuttosto semplice.
Integrazione con MVC che può quindi essere utilizzato quando necessario. Questo apre a tutto quello che gira attorno a MVC (componenti di terze parti, supporto , ...)
Compatibile con Azure (o altre cloud su cui gira asp.net)
Le pagine possono essere scritte in diversi linguaggi. Attualmente ho implementato xslt, razor e html. 
Il supporto a xslt offre una discreta portabilità con il vecchio codice
Possibilità di aggiungere e modificare pagine a 'caldo' (senza rebuild), ogni pagina è autonoma 
Componibilità pagine tramite slot, anche mischiando xslt e razor
Pagine template (layout)
Parametri nell'url (stile valueset) o ereditabili per url
Possibilità di accedere a qualsiasi libreria .net esterna per il reperimento dati (modules)
I dati possono essere in formato xml, json, .net model, ...
Configurazione differenti a seconda dell'ambiente (local, staging, prod, ...)
Sono disponibili tutte le funzionalità sui files di visual studio (versioning + 'social' coding + copia/incolla + search and reaplace)
Windsor or other IoC ready
Easy to add mobile view (thanks to mvc4)
Minify and bundlify (thanks to mvc4)

